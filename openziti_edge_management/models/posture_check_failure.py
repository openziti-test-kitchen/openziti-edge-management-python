# coding: utf-8

"""
    Ziti Edge Management

    OpenZiti Edge Management API

    The version of the OpenAPI document: 0.25.31
    Contact: help@openziti.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Union
from pydantic import BaseModel, Field, StrictStr

class PostureCheckFailure(BaseModel):
    """
    PostureCheckFailure
    """
    posture_check_id: StrictStr = Field(..., alias="postureCheckId")
    posture_check_name: StrictStr = Field(..., alias="postureCheckName")
    posture_check_type: StrictStr = Field(..., alias="postureCheckType")
    __properties = ["postureCheckId", "postureCheckName", "postureCheckType"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    # JSON field name that stores the object type
    __discriminator_property_name = 'postureCheckType'

    # discriminator mappings
    __discriminator_value_class_map = {
        'postureCheckFailureDomain': 'PostureCheckFailureDomain',
        'postureCheckFailureMacAddress': 'PostureCheckFailureMacAddress',
        'postureCheckFailureMfa': 'PostureCheckFailureMfa',
        'postureCheckFailureOperatingSystem': 'PostureCheckFailureOperatingSystem',
        'postureCheckFailureProcess': 'PostureCheckFailureProcess',
        'postureCheckFailureProcessMulti': 'PostureCheckFailureProcessMulti'
    }

    @classmethod
    def get_discriminator_value(cls, obj: dict) -> str:
        """Returns the discriminator value (object type) of the data"""
        discriminator_value = obj[cls.__discriminator_property_name]
        if discriminator_value:
            return cls.__discriminator_value_class_map.get(discriminator_value)
        else:
            return None

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Union(PostureCheckFailureDomain, PostureCheckFailureMacAddress, PostureCheckFailureMfa, PostureCheckFailureOperatingSystem, PostureCheckFailureProcess, PostureCheckFailureProcessMulti):
        """Create an instance of PostureCheckFailure from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> Union(PostureCheckFailureDomain, PostureCheckFailureMacAddress, PostureCheckFailureMfa, PostureCheckFailureOperatingSystem, PostureCheckFailureProcess, PostureCheckFailureProcessMulti):
        """Create an instance of PostureCheckFailure from a dict"""
        # look up the object type based on discriminator mapping
        object_type = cls.get_discriminator_value(obj)
        if object_type:
            klass = globals()[object_type]
            return klass.from_dict(obj)
        else:
            raise ValueError("PostureCheckFailure failed to lookup discriminator value from " +
                             json.dumps(obj) + ". Discriminator property name: " + cls.__discriminator_property_name +
                             ", mapping: " + json.dumps(cls.__discriminator_value_class_map))

from openziti_edge_management.models.posture_check_failure_domain import postureCheckFailureDomain
from openziti_edge_management.models.posture_check_failure_mac_address import postureCheckFailureMacAddress
from openziti_edge_management.models.posture_check_failure_mfa import postureCheckFailureMfa
from openziti_edge_management.models.posture_check_failure_operating_system import postureCheckFailureOperatingSystem
from openziti_edge_management.models.posture_check_failure_process import postureCheckFailureProcess
from openziti_edge_management.models.posture_check_failure_process_multi import postureCheckFailureProcessMulti
PostureCheckFailure.update_forward_refs()

