# coding: utf-8

"""
    Ziti Edge Management

    OpenZiti Edge Management API

    The version of the OpenAPI document: 0.25.31
    Contact: help@openziti.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field
from openziti_edge_management.models.posture_data_endpoint_state import PostureDataEndpointState
from openziti_edge_management.models.posture_data_mfa import PostureDataMfa
from openziti_edge_management.models.sdk_info import SdkInfo

class ApiSessionPostureData(BaseModel):
    """
    ApiSessionPostureData
    """
    endpoint_state: Optional[PostureDataEndpointState] = Field(None, alias="endpointState")
    mfa: PostureDataMfa = Field(...)
    sdk_info: Optional[SdkInfo] = Field(None, alias="sdkInfo")
    __properties = ["endpointState", "mfa", "sdkInfo"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ApiSessionPostureData:
        """Create an instance of ApiSessionPostureData from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of endpoint_state
        if self.endpoint_state:
            _dict['endpointState'] = self.endpoint_state.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mfa
        if self.mfa:
            _dict['mfa'] = self.mfa.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sdk_info
        if self.sdk_info:
            _dict['sdkInfo'] = self.sdk_info.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ApiSessionPostureData:
        """Create an instance of ApiSessionPostureData from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return ApiSessionPostureData.parse_obj(obj)

        _obj = ApiSessionPostureData.parse_obj({
            "endpoint_state": PostureDataEndpointState.from_dict(obj.get("endpointState")) if obj.get("endpointState") is not None else None,
            "mfa": PostureDataMfa.from_dict(obj.get("mfa")) if obj.get("mfa") is not None else None,
            "sdk_info": SdkInfo.from_dict(obj.get("sdkInfo")) if obj.get("sdkInfo") is not None else None
        })
        return _obj


