# coding: utf-8

"""
    Ziti Edge Management

    OpenZiti Edge Management API  # noqa: E501

    The version of the OpenAPI document: 0.25.31
    Contact: help@openziti.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime

from pydantic import BaseModel, Field, StrictInt

class PostureChecksFailureMfaCriteria(BaseModel):
    """
    PostureChecksFailureMfaCriteria
    """
    passed_mfa_at: datetime = Field(..., alias="passedMfaAt")
    timeout_remaining_seconds: StrictInt = Field(..., alias="timeoutRemainingSeconds")
    timeout_seconds: StrictInt = Field(..., alias="timeoutSeconds")
    unlocked_at: datetime = Field(..., alias="unlockedAt")
    woken_at: datetime = Field(..., alias="wokenAt")
    __properties = ["passedMfaAt", "timeoutRemainingSeconds", "timeoutSeconds", "unlockedAt", "wokenAt"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> PostureChecksFailureMfaCriteria:
        """Create an instance of PostureChecksFailureMfaCriteria from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> PostureChecksFailureMfaCriteria:
        """Create an instance of PostureChecksFailureMfaCriteria from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return PostureChecksFailureMfaCriteria.parse_obj(obj)

        _obj = PostureChecksFailureMfaCriteria.parse_obj({
            "passed_mfa_at": obj.get("passedMfaAt"),
            "timeout_remaining_seconds": obj.get("timeoutRemainingSeconds"),
            "timeout_seconds": obj.get("timeoutSeconds"),
            "unlocked_at": obj.get("unlockedAt"),
            "woken_at": obj.get("wokenAt")
        })
        return _obj

